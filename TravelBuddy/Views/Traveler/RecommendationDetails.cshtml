@model TravelBuddy.Models.Activity

@{
    ViewData["Title"] = "RecommendationDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Details</h1>

<div>
    <h4>Activity</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PlaceName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PlaceName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Rating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Rating)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GoogleRating)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GoogleRating)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Address)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Address)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ActivityLat)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ActivityLat)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.ActivityLng)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.ActivityLng)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="AddRecommendation" asp-route-id="@Model.Id">Add</a> |
    <a asp-action="Recommendations">Back to List</a>
</div>
<div id="floating-panel">
    <b>Start: </b>
    <input id="start" type="text" />
</div>
<div id="map"></div>
<style>
    #map {
        height: 400px;
        width: 100%;
    }

    #floating-panel {
        position: relative;
        top: 10px;
        left: 0%;
        z-index: 5;
        background-color: #fff;
        padding: 5px;
        border: 1px solid #999;
        text-align: center;
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        line-height: 30px;
        padding-left: 10px;
    }
</style>
<script>
    function initMap() {
        const directionsService = new google.maps.DirectionsService();
        const directionsRenderer = new google.maps.DirectionsRenderer();
        const map = new google.maps.Map(document.getElementById("map"), {
            zoom: 15,
            center: { lat: @Model.ActivityLat, lng: @Model.ActivityLng},
        });
        directionsRenderer.setMap(map);

        const onChangeHandler = function () {
            calculateAndDisplayRoute(directionsService, directionsRenderer);
        };
        document
            .getElementById("start")
            .addEventListener("change", onChangeHandler);
        document
            .getElementById("end")
            .addEventListener("change", onChangeHandler);
        var marker = new google.maps.Marker({
            position: { lat: @Model.ActivityLat, lng: @Model.ActivityLng},
            map: map
        });
    }
    function calculateAndDisplayRoute(directionsService, directionsRenderer) {
        directionsService.route(
            {
                origin: {
                    query: document.getElementById("start").value,
                },
                destination: { lat: @Model.ActivityLat, lng: @Model.ActivityLng},
                travelMode: google.maps.TravelMode.DRIVING,
            },
            (response, status) => {
                if (status === "OK") {
                    directionsRenderer.setDirections(response);
                } else {
                    window.alert("Directions request failed due to" + status);
                }
            }
        );
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=@ViewBag.ApiKeys&callback=initMap&libraries=&v=weekly" async></script>